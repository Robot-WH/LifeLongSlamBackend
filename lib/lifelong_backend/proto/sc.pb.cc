// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sc.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "sc.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace lifelong_backend {
namespace scan_context {
namespace proto {

namespace {

const ::google::protobuf::Descriptor* scan_context_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  scan_context_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_sc_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_sc_2eproto() {
  protobuf_AddDesc_sc_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "sc.proto");
  GOOGLE_CHECK(file != NULL);
  scan_context_descriptor_ = file->message_type(0);
  static const int scan_context_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(scan_context, polarcontext_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(scan_context, ringkey_),
  };
  scan_context_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      scan_context_descriptor_,
      scan_context::internal_default_instance(),
      scan_context_offsets_,
      -1,
      -1,
      -1,
      sizeof(scan_context),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(scan_context, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_sc_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      scan_context_descriptor_, scan_context::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_sc_2eproto() {
  scan_context_default_instance_.Shutdown();
  delete scan_context_reflection_;
}

void protobuf_InitDefaults_sc_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  scan_context_default_instance_.DefaultConstruct();
  scan_context_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_sc_2eproto_once_);
void protobuf_InitDefaults_sc_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_sc_2eproto_once_,
                 &protobuf_InitDefaults_sc_2eproto_impl);
}
void protobuf_AddDesc_sc_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_sc_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\010sc.proto\022#lifelong_backend.scan_contex"
    "t.proto\"5\n\014scan_context\022\024\n\014polarcontext\030"
    "\001 \003(\001\022\017\n\007ringkey\030\002 \003(\001b\006proto3", 110);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "sc.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_sc_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_sc_2eproto_once_);
void protobuf_AddDesc_sc_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_sc_2eproto_once_,
                 &protobuf_AddDesc_sc_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_sc_2eproto {
  StaticDescriptorInitializer_sc_2eproto() {
    protobuf_AddDesc_sc_2eproto();
  }
} static_descriptor_initializer_sc_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int scan_context::kPolarcontextFieldNumber;
const int scan_context::kRingkeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

scan_context::scan_context()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_sc_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:lifelong_backend.scan_context.proto.scan_context)
}

void scan_context::InitAsDefaultInstance() {
}

scan_context::scan_context(const scan_context& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:lifelong_backend.scan_context.proto.scan_context)
}

void scan_context::SharedCtor() {
  _cached_size_ = 0;
}

scan_context::~scan_context() {
  // @@protoc_insertion_point(destructor:lifelong_backend.scan_context.proto.scan_context)
  SharedDtor();
}

void scan_context::SharedDtor() {
}

void scan_context::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* scan_context::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return scan_context_descriptor_;
}

const scan_context& scan_context::default_instance() {
  protobuf_InitDefaults_sc_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<scan_context> scan_context_default_instance_;

scan_context* scan_context::New(::google::protobuf::Arena* arena) const {
  scan_context* n = new scan_context;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void scan_context::Clear() {
// @@protoc_insertion_point(message_clear_start:lifelong_backend.scan_context.proto.scan_context)
  polarcontext_.Clear();
  ringkey_.Clear();
}

bool scan_context::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:lifelong_backend.scan_context.proto.scan_context)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated double polarcontext = 1;
      case 1: {
        if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_polarcontext())));
        } else if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 10, input, this->mutable_polarcontext())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ringkey;
        break;
      }

      // repeated double ringkey = 2;
      case 2: {
        if (tag == 18) {
         parse_ringkey:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_ringkey())));
        } else if (tag == 17) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 18, input, this->mutable_ringkey())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:lifelong_backend.scan_context.proto.scan_context)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:lifelong_backend.scan_context.proto.scan_context)
  return false;
#undef DO_
}

void scan_context::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:lifelong_backend.scan_context.proto.scan_context)
  // repeated double polarcontext = 1;
  if (this->polarcontext_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_polarcontext_cached_byte_size_);
  }
  for (int i = 0; i < this->polarcontext_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDoubleNoTag(
      this->polarcontext(i), output);
  }

  // repeated double ringkey = 2;
  if (this->ringkey_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_ringkey_cached_byte_size_);
  }
  for (int i = 0; i < this->ringkey_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDoubleNoTag(
      this->ringkey(i), output);
  }

  // @@protoc_insertion_point(serialize_end:lifelong_backend.scan_context.proto.scan_context)
}

::google::protobuf::uint8* scan_context::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:lifelong_backend.scan_context.proto.scan_context)
  // repeated double polarcontext = 1;
  if (this->polarcontext_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _polarcontext_cached_byte_size_, target);
  }
  for (int i = 0; i < this->polarcontext_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->polarcontext(i), target);
  }

  // repeated double ringkey = 2;
  if (this->ringkey_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _ringkey_cached_byte_size_, target);
  }
  for (int i = 0; i < this->ringkey_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->ringkey(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:lifelong_backend.scan_context.proto.scan_context)
  return target;
}

size_t scan_context::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:lifelong_backend.scan_context.proto.scan_context)
  size_t total_size = 0;

  // repeated double polarcontext = 1;
  {
    size_t data_size = 0;
    unsigned int count = this->polarcontext_size();
    data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _polarcontext_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated double ringkey = 2;
  {
    size_t data_size = 0;
    unsigned int count = this->ringkey_size();
    data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _ringkey_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void scan_context::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:lifelong_backend.scan_context.proto.scan_context)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const scan_context* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const scan_context>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:lifelong_backend.scan_context.proto.scan_context)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:lifelong_backend.scan_context.proto.scan_context)
    UnsafeMergeFrom(*source);
  }
}

void scan_context::MergeFrom(const scan_context& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:lifelong_backend.scan_context.proto.scan_context)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void scan_context::UnsafeMergeFrom(const scan_context& from) {
  GOOGLE_DCHECK(&from != this);
  polarcontext_.UnsafeMergeFrom(from.polarcontext_);
  ringkey_.UnsafeMergeFrom(from.ringkey_);
}

void scan_context::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:lifelong_backend.scan_context.proto.scan_context)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void scan_context::CopyFrom(const scan_context& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:lifelong_backend.scan_context.proto.scan_context)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool scan_context::IsInitialized() const {

  return true;
}

void scan_context::Swap(scan_context* other) {
  if (other == this) return;
  InternalSwap(other);
}
void scan_context::InternalSwap(scan_context* other) {
  polarcontext_.UnsafeArenaSwap(&other->polarcontext_);
  ringkey_.UnsafeArenaSwap(&other->ringkey_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata scan_context::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = scan_context_descriptor_;
  metadata.reflection = scan_context_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// scan_context

// repeated double polarcontext = 1;
int scan_context::polarcontext_size() const {
  return polarcontext_.size();
}
void scan_context::clear_polarcontext() {
  polarcontext_.Clear();
}
double scan_context::polarcontext(int index) const {
  // @@protoc_insertion_point(field_get:lifelong_backend.scan_context.proto.scan_context.polarcontext)
  return polarcontext_.Get(index);
}
void scan_context::set_polarcontext(int index, double value) {
  polarcontext_.Set(index, value);
  // @@protoc_insertion_point(field_set:lifelong_backend.scan_context.proto.scan_context.polarcontext)
}
void scan_context::add_polarcontext(double value) {
  polarcontext_.Add(value);
  // @@protoc_insertion_point(field_add:lifelong_backend.scan_context.proto.scan_context.polarcontext)
}
const ::google::protobuf::RepeatedField< double >&
scan_context::polarcontext() const {
  // @@protoc_insertion_point(field_list:lifelong_backend.scan_context.proto.scan_context.polarcontext)
  return polarcontext_;
}
::google::protobuf::RepeatedField< double >*
scan_context::mutable_polarcontext() {
  // @@protoc_insertion_point(field_mutable_list:lifelong_backend.scan_context.proto.scan_context.polarcontext)
  return &polarcontext_;
}

// repeated double ringkey = 2;
int scan_context::ringkey_size() const {
  return ringkey_.size();
}
void scan_context::clear_ringkey() {
  ringkey_.Clear();
}
double scan_context::ringkey(int index) const {
  // @@protoc_insertion_point(field_get:lifelong_backend.scan_context.proto.scan_context.ringkey)
  return ringkey_.Get(index);
}
void scan_context::set_ringkey(int index, double value) {
  ringkey_.Set(index, value);
  // @@protoc_insertion_point(field_set:lifelong_backend.scan_context.proto.scan_context.ringkey)
}
void scan_context::add_ringkey(double value) {
  ringkey_.Add(value);
  // @@protoc_insertion_point(field_add:lifelong_backend.scan_context.proto.scan_context.ringkey)
}
const ::google::protobuf::RepeatedField< double >&
scan_context::ringkey() const {
  // @@protoc_insertion_point(field_list:lifelong_backend.scan_context.proto.scan_context.ringkey)
  return ringkey_;
}
::google::protobuf::RepeatedField< double >*
scan_context::mutable_ringkey() {
  // @@protoc_insertion_point(field_mutable_list:lifelong_backend.scan_context.proto.scan_context.ringkey)
  return &ringkey_;
}

inline const scan_context* scan_context::internal_default_instance() {
  return &scan_context_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace scan_context
}  // namespace lifelong_backend

// @@protoc_insertion_point(global_scope)
